name: Build and Push Frontend to GHCR

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  security-events: write  # ðŸ‘ˆ needed for SARIF upload

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout frontend
      uses: actions/checkout@v4
      with:
        repository: takenotes-app/notes-app
        path: ./notes-app

    - name: Checkout backend
      uses: actions/checkout@v4
      with:
        repository: takenotes-app/notes-app-backend
        path: ./notes-app-backend

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Extract metadata for Frontend
      id: meta-frontend
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/takenotes-app/notes-frontend
        tags: |
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
          type=sha,format=short

    - name: Extract metadata for Backend
      id: meta-backend
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/takenotes-app/notes-backend
        tags: |
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
          type=sha,format=short

    - name: Build frontend image
      uses: docker/build-push-action@v4
      with:
        context: ./notes-app
        push: false
        load: true
        tags: ${{ steps.meta-frontend.outputs.tags }}
        labels: ${{ steps.meta-frontend.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Trivy scan (Frontend - SARIF)
      uses: aquasecurity/trivy-action@0.30.0
      with:
        image-ref: ghcr.io/takenotes-app/notes-frontend:latest
        format: sarif
        output: trivy-results-frontend.sarif
        ignore-unfixed: true
        vuln-type: os,library
        severity: CRITICAL,HIGH

    - name: Upload frontend SARIF to GitHub
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: trivy-results-frontend.sarif
        category: frontend

    - name: Push frontend image
      run: docker push ghcr.io/takenotes-app/notes-frontend:latest

    - name: Build backend image
      uses: docker/build-push-action@v4
      with:
        context: ./notes-app-backend
        push: false
        load: true
        tags: ${{ steps.meta-backend.outputs.tags }}
        labels: ${{ steps.meta-backend.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Trivy scan (Backend - SARIF)
      uses: aquasecurity/trivy-action@0.30.0
      with:
        image-ref: ghcr.io/takenotes-app/notes-backend:latest
        format: sarif
        output: trivy-results-backend.sarif
        ignore-unfixed: true
        vuln-type: os,library
        severity: CRITICAL,HIGH

    - name: Upload backend SARIF to GitHub
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: trivy-results-backend.sarif
        category: frontend

    - name: Push backend image
      run: docker push ghcr.io/takenotes-app/notes-backend:latest

  pull-and-deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Checkout docker-compose files
      uses: actions/checkout@v4
      with:
        path: ./docker-compose-files

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add server to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to server
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USER: ${{ secrets.SSH_USER }}
        MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
      run: |
        rsync -avz ./docker-compose-files/docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/

        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
          echo 'Pulling latest images from GHCR...'
          sudo docker pull ghcr.io/takenotes-app/notes-frontend:latest
          sudo docker pull ghcr.io/takenotes-app/notes-backend:latest

          echo 'Deploying with Docker Compose...'
          cd /home/${{ secrets.SSH_USER }}
          export MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}
          sudo -E docker compose pull
          sudo -E docker compose up -d --force-recreate

          echo 'Deployment complete. Checking container status...'
          sudo docker ps
        "
